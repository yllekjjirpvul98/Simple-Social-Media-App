{"version":3,"sources":["Config.js","StatusTextBox.js","Status.js","StatusList.js","StatusPage.js","UserCard.js","CommunityPage.js","Profile.js","MainPage.js","NormalLoginForm.js","LoginPage.js","SignInPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","appId","scopes","StatusTextBox","handleSubmit","e","preventDefault","props","form","validateFields","err","values","a","options","method","headers","Authorization","accessToken","user","id","username","body","JSON","stringify","fetch","then","response","json","data","resetFields","handler","catch","console","log","this","fieldsError","getFieldDecorator","isFieldTouched","getFieldsError","getFieldError","statusError","Container","style","width","textAlign","bordered","onSubmit","Item","validateStatus","help","rules","required","message","TextArea","rows","cols","placeholder","size","type","htmlType","disabled","Object","keys","some","field","React","Component","WrappedStatusTextBox","create","name","Meta","Status","showModal","setState","visible","new_content","item","content","handleChange","target","value","handleCancel","handleOk","state","uri","text","title","datetime","description","isUserTweet","margin","padding","actions","key","onClick","handleDelete","bind","onOk","onCancel","onChange","StatusList","dataSource","renderItem","Content","StatusPage","updatedEdit","updatedPost","status","handlerEdit","handlerPost","display","UserCard","handleUnfollow","profile","handleFollow","button","following","includes","CommunityPage","Title","updateFollow","fetchUsers","fetchFollowingList","prevProps","prevState","length","grid","gutter","column","users","Profile","follower","fetchFollowerList","row","followingData","i","push","email","columns","dataIndex","followerData","span","fontSize","to","followerList","followingList","exact","path","menuItemSize","Header","paddingTop","menuPlaceHolder","height","MainPage","statusData","prevStates","statusUpdate","location","filter","index","arr","fetchFollowingUserData","list","Promise","all","map","cache","result","concat","fetchFollowerUserData","sort","b","Date","parse","theme","mode","icon","followinglist","NormalLoginForm","handleRegister","wrapperCol","xs","sm","className","label","initialValue","mail","prefix","color","givenName","surname","WrappedNormalLoginForm","LoginPage","Grid","container","spacing","direction","alignItems","justify","minHeight","minWidth","SignInPage","UserAgentApplication","auth","clientId","config","authority","redirectURI","cacheLocation","storeAuthStateInCookie","getAccount","isAuthenticated","authResponse","error","db_user","updateUser","getUserProfile","getUserDetails","signIn","getUserFromDb","graph","require","client","Client","init","authProvider","done","api","get","acquireTokenSilent","loginPopup","prompt","debug","url","pathname","background","logIn","component","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae40185c.chunk.js","sourcesContent":["module.exports = {\r\n    appId: 'f6848992-be00-4b00-8eb6-18f1654d6a81',\r\n    scopes: [\r\n        \"https://graph.microsoft.com/.default\"\r\n    ]\r\n}","import React from 'react';\r\nimport { Form, Button, Input, Card } from 'antd';\r\nimport { Container } from '@material-ui/core';\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n  }\r\n\r\nclass StatusTextBox extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n          if (!err) {\r\n            // call api to post status\r\n            const url = \"https://cad-cw-cmy1g17.azurewebsites.net/api/postStatus\";\r\n            const options = {method: 'POST', headers: {Authorization : 'Bearer ' + this.props.accessToken}}\r\n            values['id'] = this.props.user.id;\r\n            values['username'] = this.props.user.username;\r\n            options.body = JSON.stringify(values);\r\n            await fetch (url, options)\r\n            .then(response => response.json())\r\n            .then(data => this.props.form.resetFields())\r\n            .then(data => this.props.handler(true))\r\n            .catch(err => console.log(err))\r\n          }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render () {\r\n        const { getFieldDecorator, isFieldTouched, getFieldsError, getFieldError } = this.props.form;\r\n        const statusError = isFieldTouched('content') && getFieldError('content');\r\n\r\n        return (\r\n            <Container style={{width:'60vw', textAlign:\"center\"}}>\r\n            <Card bordered={false}>\r\n            <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Item validateStatus={statusError ? 'error' : ''} help={statusError || ''}>\r\n                        {getFieldDecorator('content', {\r\n                            rules: [{required: true, message : 'You cannot post empty status'}]\r\n                        }) (\r\n                            <Input.TextArea rows='5' cols='35' style={{'resize':'none', 'width' : '50%', 'fontSize' : '18px'}} placeholder=\"What do you want to post today?\"/>\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button size=\"large\" type=\"primary\" htmlType = \"submit\" disabled={hasErrors(getFieldsError())}>Post</Button>  \r\n                    </Form.Item>\r\n            </Form>\r\n            </Card>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n}\r\nconst WrappedStatusTextBox = Form.create({name : 'status_box'})(StatusTextBox);\r\nexport default WrappedStatusTextBox;","import React from 'react';\r\nimport { Input, Card, Icon, Modal } from 'antd';\r\nimport {Container} from '@material-ui/core';\r\nimport { textAlign } from '@material-ui/system';\r\nconst {Meta} = Card;\r\n\r\nclass Status extends React.Component {\r\n    \r\n    constructor (props){\r\n        super(props);\r\n        this.state = {visible : false, new_content:''};\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n          new_content : this.props.item.content\r\n        });\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n          new_content: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n    };\r\n\r\n    // update edited status via Azure Functions\r\n    handleOk = async e => {\r\n        const new_content = this.state.new_content;\r\n        const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/editStatus?id=\" + this.props.item.id;\r\n        const options = {method : 'POST'}\r\n        options.body = JSON.stringify({\r\n            content : new_content\r\n        });\r\n        await fetch(uri, options)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            visible: false,\r\n          }))\r\n        .then(data => this.props.handler())\r\n        .catch(err => console.log(err))\r\n    };\r\n\r\n\r\n    isUserTweet() {\r\n        // check if post \r\n        return this.props.user.username === this.props.item.username;\r\n    }\r\n\r\n    async handleDelete (){\r\n        const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/deleteStatus?id=\"+this.props.item.id;\r\n        const options = {method : 'GET'}\r\n        await fetch(uri, options)\r\n        .then(response => response.json())\r\n        .then(message => this.props.handler())\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n\r\n        const text = <Meta title={this.props.item.username+\"  (\"+this.props.item.datetime+\")\"} description={this.props.item.content}/>\r\n\r\n        if (this.isUserTweet()) {\r\n\r\n            return (\r\n                <Container style={{width:'60vw', textAlign:\"center\"}}>\r\n                <Card style={{margin:0, padding: 0}} \r\n                      actions={[\r\n                      <Icon type=\"edit\" key=\"edit\" onClick={this.showModal}/>, \r\n                      <Icon type=\"delete\" onClick={this.handleDelete.bind(this)}/>]\r\n                      }>\r\n                    {text}\r\n                </Card>\r\n                <Modal\r\n                    title=\"Edit your status\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk.bind(this)}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <Input.TextArea id=\"textarea\" onChange={this.handleChange.bind(this)} rows='5' cols='35' style={{'resize':'none', 'fontSize' : '18px'}} value={this.state.new_content} placeholder=\"What do you want to post today?\"/>\r\n                </Modal>\r\n                </Container>\r\n            );\r\n        }else {\r\n            return (\r\n                <Container style={{width:'60vw', textAlign:\"center\"}}>\r\n                <Card>\r\n                    {text}\r\n                </Card>\r\n                </Container>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nexport default Status;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { List } from 'antd';\r\nimport Status from './Status';\r\nimport { textAlign } from '@material-ui/system';\r\n\r\nclass StatusList extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n                <List dataSource ={this.props.data} style={{textAlign : \"center\"}}\r\n                renderItem = {item => (\r\n                    <List.Item>\r\n                        <Status key={item.id} item={item} user={this.props.user} handler={this.props.handler}/>\r\n                    </List.Item>\r\n                )}>\r\n                </List>\r\n        );\r\n    }\r\n\r\n}\r\nexport default StatusList;","import React from 'react';\r\nimport { Layout, Spin } from 'antd';\r\nimport WrappedStatusTextBox from './StatusTextBox';\r\nimport { Container } from '@material-ui/core'; \r\nimport StatusList from './StatusList';\r\nconst { Content } = Layout\r\n\r\nclass StatusPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    display(){\r\n        return (\r\n            (this.props.updatedEdit || this.props.updatedPost) ? \r\n                <Spin/>\r\n                :\r\n                <StatusList data={this.props.status} user={this.props.user} handler={this.props.handlerEdit}/>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Layout>\r\n            <Content>\r\n                <Container style={{textAlign:'center'}}>\r\n                <WrappedStatusTextBox user={this.props.user} accessToken={this.props.accessToken} handler={this.props.handlerPost}></WrappedStatusTextBox>\r\n                {this.display()}\r\n                </Container>\r\n            </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n}\r\nexport default StatusPage;","import React from 'react';\r\nimport { Card, Button } from 'antd';\r\n\r\nclass UserCard extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    handleUnfollow = async e => {\r\n        // talk to azure functions to unfollow a user\r\n        const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/unfollowUser?from=\" + this.props.user.id + \"&to=\" + this.props.profile.id;\r\n        await fetch(uri)\r\n        .then(response => response.json())\r\n        .then(this.props.handler())\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    handleFollow = async e => {\r\n        // talk to azure functions to follow a user\r\n        const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/followUser?from=\" + this.props.user.id + \"&to=\" + this.props.profile.id;\r\n        await fetch(uri)\r\n        .then(response => response.json())\r\n        .then(this.props.handler())\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        let button;\r\n        if (this.props.following.includes(this.props.profile.id)) {\r\n            // user already following this user\r\n            button = <Button type=\"primary\" onClick={this.handleUnfollow}>Following</Button>\r\n        }else {\r\n            button = <Button type=\"primary\" onClick={this.handleFollow}>Follow</Button>\r\n        }\r\n        return (\r\n            <Card bordered={false} title={'@'+this.props.profile.username} style={{textAlign: 'center'}}>\r\n                <div>{this.props.profile.name}</div>\r\n                <div>{button}</div>\r\n            </Card>\r\n        );\r\n        \r\n    }\r\n\r\n}\r\nexport default UserCard;","import React from 'react';\r\nimport { Layout, Typography, List, Card } from 'antd';\r\nimport { Container } from '@material-ui/core';\r\nimport UserCard from './UserCard'; \r\n \r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nclass CommunityPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {updateFollow : false};\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await this.props.fetchUsers();\r\n        await this.props.fetchFollowingList();\r\n    }\r\n\r\n    handler(){\r\n        this.setState({updateFollow : true});\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState){\r\n        if (this.state.updateFollow) {\r\n            const size = prevProps.following.length;\r\n            await this.props.fetchFollowingList();\r\n            if (size !== this.props.following.length) {\r\n                // data fetch is consistent to write\r\n                this.setState({updateFollow:false});\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Layout>\r\n            <Content>\r\n                <Container style={{textAlign:'center'}}>\r\n                    <h1>Explore the community</h1>\r\n                    <List grid= {{gutter : 16, column: 4}}\r\n                    dataSource={this.props.users}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <UserCard user={this.props.user} following={this.props.following} profile={item} handler={this.handler.bind(this)}/>\r\n                        </List.Item>\r\n                    )} \r\n                    />                   \r\n                </Container>\r\n            </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n}\r\nexport default CommunityPage;","import React from 'react';\r\nimport { Row, Col, Card, Table } from 'antd';\r\nimport { Container } from '@material-ui/core';\r\nimport { Route, Switch, Link, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nclass Profile extends React.Component {\r\n\r\n    constructor(props){\r\n        super (props);\r\n        this.following.bind(this);\r\n        this.follower.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchFollowingList();\r\n        this.props.fetchFollowerList();\r\n    }\r\n\r\n    following() {\r\n        const row = [];\r\n        const columns = [\r\n            {\r\n                title: 'Username',\r\n                dataIndex : 'username',\r\n                key : 'username'\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex : 'name',\r\n                key : 'name'\r\n            },\r\n            {\r\n                title: 'Email',\r\n                dataIndex : 'email',\r\n                key : 'email'\r\n            }\r\n        ]\r\n        const data = this.props.followingData;\r\n        for (let i = 0; i < data.length; i++){\r\n            row.push({\r\n                key : 'following'+i,\r\n                username : '@' + data[i].username,\r\n                name : data[i].name,\r\n                email : data[i].email\r\n            })\r\n        }\r\n        return (\r\n            <Container style={{textAlign:'center'}}>\r\n                <h2>List of Following</h2>\r\n                <Table columns={columns} dataSource={data}/>\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n    follower() {\r\n        const row = [];\r\n        const columns = [\r\n            {\r\n                title: 'Username',\r\n                dataIndex : 'username',\r\n                key : 'username'\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex : 'name',\r\n                key : 'name'\r\n            },\r\n            {\r\n                title: 'Email',\r\n                dataIndex : 'email',\r\n                key : 'email'\r\n            }\r\n        ]\r\n        const data = this.props.followerData;\r\n        for (let i = 0; i < data.length; i++){\r\n            row.push({\r\n                key : 'follower'+i,\r\n                username : '@' + data[i].username,\r\n                name : data[i].name,\r\n                email : data[i].email\r\n            })\r\n        }\r\n        return (\r\n            <Container style={{textAlign:'center'}}>\r\n                <h2>List of Follower</h2>\r\n                <Table columns={columns} dataSource={data}/>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n    <Router>\r\n    <div>\r\n    <Row>\r\n      <Col span={24}>\r\n          <Container style={{textAlign:'center'}}>\r\n            <Card bordered={false}>\r\n                <h1>{'@' + this.props.user.username}</h1>\r\n                <div style={{fontSize : '20px'}}>{this.props.user.name}</div>\r\n                <div style={{fontSize : '20px'}}>{this.props.user.email}</div>\r\n            </Card>\r\n            <Row>\r\n            <Col span={12}>\r\n                <Container>\r\n                    <Link to=\"/follower\">\r\n                        <Card>\r\n                            <h2>Number of Followers</h2>\r\n                            <div style={{fontSize: '30px'}}>{this.props.followerList.length}</div>\r\n                        </Card>\r\n                    </Link>\r\n                </Container>\r\n            </Col>\r\n            <Col span={12}>\r\n                <Container>\r\n                    <Link to=\"/following\">\r\n                        <Card>\r\n                        <h2>Number of Following</h2>\r\n                        <div style={{fontSize: '30px'}}>{this.props.followingList.length}</div>\r\n                        </Card>\r\n                    </Link>\r\n                </Container>\r\n            </Col>\r\n            </Row>  \r\n          </Container>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col span={24}>\r\n            <Switch>\r\n                <Route exact path=\"/following\">{this.following()}</Route>\r\n                <Route exact path=\"/follower\">{this.follower()}</Route>\r\n            </Switch>\r\n            \r\n        </Col>\r\n    </Row>\r\n    </div>\r\n    </Router>\r\n    )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport { Layout, Menu, Icon, Typography, Result } from 'antd';\r\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\r\nimport StatusPage from './StatusPage';\r\nimport CommunityPage from './CommunityPage';\r\nimport Profile from './Profile';\r\n\r\nconst { Header, Content } = Layout;\r\nconst { Title } = Typography;\r\nconst menuItemSize = {\r\n  fontSize: '20px',\r\n  paddingTop: '25px'\r\n};\r\nconst menuPlaceHolder = { height: '10vh', width: '20vw', textAlign: 'center' }\r\n\r\n\r\nclass MainPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { statusData: [], users: [], following: [], followerList: [], followingData: [], followerData: [], updatedPost:false, updatedEdit:false }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchFollowingList();\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevStates) {\r\n      if (this.state.updatedPost || this.state.updatedEdit) {\r\n        await this.statusUpdate();\r\n        if (prevStates.statusData != this.state.statusData) {\r\n          console.log(prevStates.statusData);\r\n          console.log(this.state.statusData);\r\n          this.setState({updatedEdit : false, updatedPost : false})\r\n        }\r\n      }\r\n\r\n  }\r\n\r\nhandlerPost(value) {\r\n    this.setState({updatedPost : true});\r\n}\r\n\r\nhandlerEdit(value) {\r\n    this.setState({updatedEdit : true});\r\n}\r\n\r\n  async fetchUsers() {\r\n    // fetch all users from database\r\n    const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/getAllUsers\";\r\n    const id = this.props.location.state.user.id;\r\n    await fetch(uri)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data.filter(function (value, index, arr) {\r\n          return value.id !== id\r\n        })\r\n      })\r\n      .then(data => this.setState({ users: data }))\r\n  }\r\n\r\nasync fetchFollowingList() {\r\n    // fetch list of following\r\n    const id = this.props.location.state.user.id;\r\n    const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/getFollowing?id=\" + this.props.location.state.user.id;\r\n    await fetch(uri)\r\n    .then(response => response.json())\r\n    .then(async data => {\r\n        this.setState({ following: data })\r\n        await this.statusUpdate();\r\n        await this.fetchFollowingUserData();\r\n    });\r\n  }\r\n\r\nasync fetchFollowingUserData() {\r\n    const list = this.state.following;\r\n    await Promise.all(list.map(user => {\r\n      const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/getUserFromDb?id=\" + user;\r\n      return fetch(uri, { cache: \"no-cache\" }).then(response => response.json())\r\n    }))\r\n      .then(data => {\r\n        let result = []\r\n        for (var i = 0; i < data.length; i++) {\r\n          if (data.length > 0) {\r\n            result = result.concat(data[i]);\r\n          }\r\n        }\r\n        return result;\r\n      }).then(result => this.setState({ followingData: result }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\nasync fetchFollowerUserData() {\r\n    const followerList = this.state.followerList;\r\n    await Promise.all(followerList.map(user => {\r\n      const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/getUserFromDb?id=\" + user;\r\n      return fetch(uri, { cache: \"no-cache\" }).then(response => response.json())\r\n    }))\r\n      .then(data => {\r\n        let result = []\r\n        for (var i = 0; i < data.length; i++) {\r\n          if (data.length > 0) {\r\n            result = result.concat(data[i]);\r\n          }\r\n        }\r\n        return result;\r\n      }).then(result => this.setState({ followerData: result }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  async fetchFollowerList() {\r\n    // fetch list of followers\r\n    const id = this.props.location.state.user.id;\r\n    const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/getFollowers?id=\" + this.props.location.state.user.id;\r\n    await fetch(uri)\r\n    .then(response => response.json())\r\n    .then(async data => {\r\n      this.setState({ followerList: data });\r\n      await this.fetchFollowerUserData();\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  async statusUpdate() {\r\n    // finding data for status list\r\n    this.state.updatedEdit = true;\r\n    var followingList = this.state.following;\r\n    followingList = [...followingList];\r\n    if (!followingList.includes(this.props.location.state.user.id)){\r\n      followingList.push(this.props.location.state.user.id);\r\n    }\r\n    await Promise.all(followingList.map(user => {\r\n      const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/getStatus/\" + user;\r\n      return fetch(uri, { cache: \"no-cache\" }).then(response => response.json())\r\n    }))\r\n      .then(data => {\r\n        let result = []\r\n        for (var i = 0; i < data.length; i++) {\r\n          if (data.length > 0) {\r\n            result = result.concat(data[i]);\r\n          }\r\n        }\r\n        result = result.sort(function (a, b) {\r\n          return Date.parse(a.datetime) < Date.parse(b.datetime) ? 1 : -1\r\n        });\r\n        return result;\r\n      }).then(result => this.setState({ statusData: result }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Menu theme=\"dark\" mode=\"horizontal\" style={{ height: '10vh' }}>\r\n          <Menu.Item key=\"profile\" style={menuPlaceHolder}>\r\n            <Link to=\"/profile\">\r\n              <span style={menuItemSize}>\r\n                <Icon type=\"smile\" style={menuItemSize} />\r\n                Profile </span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"status\" style={menuPlaceHolder}>\r\n            <Link to=\"/statusList\">\r\n              <span style={menuItemSize}>\r\n                <Icon type=\"message\" style={menuItemSize} />\r\n                Status </span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"user\" style={menuPlaceHolder}>\r\n            <Link to=\"/community\">\r\n              <span style={menuItemSize}><Icon type=\"user\" style={menuItemSize} /> Explore </span>\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Switch>\r\n          <Route path=\"/status\"><Result\r\n            icon={<Icon type=\"smile\" theme=\"twoTone\" />}\r\n            title=\"Welcome to the Social Media App!\"\r\n          /></Route>\r\n          <Route path=\"/profile\"><Profile user={this.props.location.state.user} followingList={this.state.following} followingData = {this.state.followingData} followerData = {this.state.followerData} fetchFollowingList={this.fetchFollowingList.bind(this)} followerList={this.state.followerList} fetchFollowerList={this.fetchFollowerList.bind(this)} /> </Route>\r\n          <Route path=\"/statusList\"><StatusPage updatedPost={this.state.updatedPost} updatedEdit={this.state.updatedEdit} handlerPost={this.handlerPost.bind(this)} handlerEdit={this.handlerEdit.bind(this)} status={this.state.statusData} user={this.props.location.state.user} statusUpdate={this.statusUpdate.bind(this)} followinglist={this.state.following} fetchFollowingList={this.fetchFollowingList.bind(this)} /></Route>\r\n          <Route path=\"/community\"><CommunityPage user={this.props.location.state.user} users={this.state.users} following={this.state.following} fetchUsers={this.fetchUsers.bind(this)} fetchFollowingList={this.fetchFollowingList.bind(this)} /></Route>\r\n        </Switch>\r\n\r\n      </Router>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default MainPage;","import { Form, Icon, Input, Button, Tooltip } from 'antd';\r\nimport React from 'react';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // register user with form values\r\n        const id = this.props.user.id;\r\n        values['id'] = id;\r\n        // post value to database by calling api\r\n        const options = {method: 'POST', headers: {Authorization : 'Bearer ' + this.props.accessToken}}\r\n        options.body = JSON.stringify(values)\r\n        const uri = \"https://cad-cw-cmy1g17.azurewebsites.net/api/registerUser\"\r\n        await fetch (uri, options)\r\n        .then(response => console.log(response.json()))\r\n        .then(data => this.props.handleRegister())\r\n        .catch(err => console.log(err))\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <Form.Item label=\"E-mail\">\r\n          {getFieldDecorator('email', {\r\n            rules: [{ required: true, message: 'Please input your email address!' },\r\n          {type: 'email', message:'The input is not a valid email'},],\r\n          initialValue:this.props.user.mail\r\n           })(\r\n            <Input\r\n              prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"E-mail\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Name\">\r\n          {getFieldDecorator('name', {\r\n            rules: [{ required: true, message: 'Please input your Name!' }],\r\n            initialValue: this.props.user.givenName + \" \" + this.props.user.surname\r\n          })(\r\n            <Input\r\n              placeholder=\"Input your name\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label={\r\n        <span>Username&nbsp;\r\n        <Tooltip title = \"This name will be shown to other users\">\r\n          <Icon type=\"question-circle-o\"/>\r\n        </Tooltip>\r\n        </span>}>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              placeholder=\"Input your username\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\nexport default WrappedNormalLoginForm;","import React from 'react';\r\nimport WrappedNormalLoginForm from './NormalLoginForm';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Typography } from 'antd';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    render (){\r\n        const { Title } = Typography;\r\n        return  (  \r\n        <Grid\r\n    container\r\n    spacing={0}\r\n    direction=\"column\"\r\n    alignItems=\"center\"\r\n    justify=\"center\"\r\n    style={{ minHeight: '100vh', minWidth: '100vw', 'background' : '#FFFACD' }}\r\n    >\r\n    <Grid item>\r\n            <Typography><Title>Register for your first sign in</Title></Typography>\r\n    </Grid>\r\n    <Grid item>\r\n        <WrappedNormalLoginForm user={this.props.location.state.user} handleRegister={this.props.location.handleRegister}/>\r\n    </Grid>   \r\n\r\n    </Grid>\r\n    );\r\n}\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { Button, Typography, Layout, Spin } from 'antd';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport config from './Config';\r\nimport { UserAgentApplication } from 'msal';\r\nimport MainPage from './MainPage';\r\nimport LoginPage from './LoginPage';\r\n\r\n\r\nclass SignInPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.UserAgentApplication = new UserAgentApplication({\r\n            auth: {\r\n                clientId: config.appId,\r\n                authority: \"https://login.microsoftonline.com/4a5378f9-29f4-4d3e-be89-669d03ada9d8\",\r\n                redirectURI: \"https://cmy1g17-cad-cw1.azurewebsites.net/\"\r\n            },\r\n            cache: {\r\n                cacheLocation: \"localStorage\",\r\n                storeAuthStateInCookie: false\r\n            }\r\n        })\r\n\r\n        var user = this.UserAgentApplication.getAccount();\r\n\r\n        this.state = {\r\n            user: {},\r\n            isAuthenticated: (user !== null),\r\n            authResponse: null,\r\n            error: {},\r\n            db_user: [],\r\n            updateUser: false\r\n        };\r\n\r\n        if (user) {\r\n            this.getUserProfile();\r\n        }\r\n\r\n        this.getUserProfile = this.getUserProfile.bind(this);\r\n        this.getUserDetails = this.getUserDetails.bind(this);\r\n        this.signIn = this.signIn.bind(this);\r\n        this.getUserFromDb = this.getUserFromDb.bind(this);\r\n    }\r\n\r\n    async getUserDetails(accessToken) {\r\n        var graph = require('@microsoft/microsoft-graph-client');\r\n        const client = graph.Client.init({\r\n            authProvider: (done) => {\r\n                done(null, accessToken.accessToken);\r\n            }\r\n        });\r\n        const user = await client.api('/me').get();\r\n        return user;\r\n    }\r\n\r\n    async getUserProfile() {\r\n        try {\r\n            // get access token silently\r\n            var accessToken = await this.UserAgentApplication.acquireTokenSilent({\r\n                scopes: config.scopes\r\n            });\r\n            if (accessToken) {\r\n                // get user profile\r\n                var user = await this.getUserDetails(accessToken);\r\n                this.setState({\r\n                    isAuthenticated: true,\r\n                    user: user,\r\n                    error: {},\r\n                    authResponse: accessToken.accessToken,\r\n                    updateUser: true\r\n                });\r\n                await this.getUserFromDb();\r\n            }\r\n        } catch (error) {\r\n            this.setState({\r\n                isAuthenticated: false\r\n            })\r\n        }\r\n    }\r\n\r\n    async signIn() {\r\n        try {\r\n            await this.UserAgentApplication.loginPopup(\r\n                {\r\n                    scopes: config.scopes,\r\n                    prompt: \"select_account\"\r\n                }\r\n            );\r\n            await this.getUserProfile();\r\n        } catch (err) {\r\n            var error = {}\r\n            error = {\r\n                message: err.message,\r\n                debug: JSON.stringify(err)\r\n            }\r\n            this.setState({\r\n                isAuthenticated: false,\r\n                user: {},\r\n                error: error\r\n            })\r\n        }\r\n    }\r\n\r\n    async getUserFromDb() {\r\n        const url = \"https://cad-cw-cmy1g17.azurewebsites.net/api/getUserFromDB?id=\" + this.state.user.id;\r\n        const options = {\r\n            method: 'GET',\r\n            headers: { 'Authorization': 'Bearer ' + this.state.authResponse }\r\n        }\r\n        await fetch(url, options)\r\n            .then(response => response.json())\r\n            .then(user =>\r\n                this.setState({ db_user: user })\r\n            )\r\n    }\r\n\r\n    handleRegister() {\r\n        this.setState({ updateUser: true });\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevStates) {\r\n        if (this.state.updateUser) {\r\n            await this.getUserFromDb();\r\n            if (prevStates.db_user !== this.state.db_user) {\r\n                this.setState({ updateUser: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    logIn() {\r\n        const { Title } = Typography;\r\n\r\n        return this.state.isAuthenticated ? (\r\n            // check if user already in the database\r\n            !this.state.updateUser ? (\r\n                this.state.db_user.length === 0 ? (\r\n                    // user has not registered yet\r\n                    <Redirect to={{ pathname: \"/register\", state: { user: this.state.user, accessToken: this.state.authResponse }, handleRegister: this.handleRegister.bind(this) }} />\r\n                ) :\r\n                    // direct user to status page\r\n                    (\r\n                        <Redirect to={{ pathname: \"/status\", state: { user: this.state.db_user[0], accessToken: this.state.authResponse } }} />\r\n                    )\r\n            ) :\r\n                (\r\n                    <Container style={{ width: '100vw', height: '100vh', textAlign: 'center' }}>\r\n                        <Spin size=\"large\" />\r\n                    </Container>\r\n                )\r\n        )\r\n            : (\r\n                <Layout style={{ textAlign: \"center\", margin: \"20%\", background: \"white\" }}>\r\n                    <Container>\r\n                        <Title>Welcome to the Social Media!</Title>\r\n                        <Button onClick={this.signIn}>Click here to sign in</Button>\r\n                    </Container>\r\n                </Layout>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    {this.logIn()}\r\n                </div>\r\n                <Switch>\r\n                    <Route path=\"/register\" component={LoginPage} />\r\n                    <Route path=\"/status\" component={MainPage} />\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SignInPage;","import React from 'react';\nimport SignInPage from './SignInPage';\nimport './App.css'\n\nfunction App() {\n  return (\n    <SignInPage/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}